package com.memtrip.cucumber.smoothie;

import org.junit.Test;
import java.text.SimpleDateFormat;

<#assign uniqueBackgrounds = unique_backgrounds_for_feature(features)>

<#list uniqueBackgrounds as background>
    import ${background.getPackageName()};
</#list>

<#list features as feature>
    <#list feature.getScenarioPickles() as scenario>
        import ${scenario.getPackageName()};
    </#list>
</#list>

public class CucumberRunner {

    <#list features as feature>

        <#if feature.isOneShot()>

            @Test
            public void ${feature.getClassName()}_one_shot() throws Exception {

                <#if feature.hasBackground()>
                    ${feature.getBackground().getClassName()} _${feature.getBackground().getClassName()} = new ${feature.getBackground().getClassName()}();
                </#if>

                <#list feature.getScenarioPickles() as scenario>

                        ${scenario.getClassName()} _${scenario.getClassName()}_${scenario.getOccurrence()} = new ${scenario.getClassName()}();

                        <#list scenario.getBehaviourPickles() as behaviour>
                            <#if behaviour.isBackgroundBehaviour()>
                                _${feature.getBackground().getClassName()}.${behaviour.getMethodName()}(${format_args(behaviour.getArguments())});
                            <#else>
                                 _${scenario.getClassName()}_${scenario.getOccurrence()}.${behaviour.getMethodName()}(${format_args(behaviour.getArguments())});
                            </#if>
                        </#list>

                </#list>
            }

        <#else>

            <#list feature.getScenarioPickles() as scenario>

                @Test
                public void ${feature.getClassName()}_${scenario.getClassName()}_${scenario.getOccurrence()}() throws Exception {

                    <#if feature.hasBackground()>
                        ${feature.getBackground().getClassName()} _${feature.getBackground().getClassName()} = new ${feature.getBackground().getClassName()}();
                    </#if>

                    ${scenario.getClassName()} _${scenario.getClassName()} = new ${scenario.getClassName()}();

                    <#list scenario.getBehaviourPickles() as behaviour>
                        <#if behaviour.isBackgroundBehaviour()>
                            _${feature.getBackground().getClassName()}.${behaviour.getMethodName()}(${format_args(behaviour.getArguments())});
                        <#else>
                             _${scenario.getClassName()}.${behaviour.getMethodName()}(${format_args(behaviour.getArguments())});
                        </#if>
                    </#list>
                }

            </#list>

        </#if>

    </#list>
}